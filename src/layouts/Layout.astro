---
import "../assets/styles/base.css"; // base styles + tailwind
import "@fontsource-variable/inter"; // font

interface Props {
  title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Astro description" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>

    <script>
      // import { $authLoaded } from "@/utils/stores";
      import { auth, db } from "@/firebase/client";
      import { User } from "@/utils/firestore.types";
      import { $authLoaded, $userData, $userFromFirebase, $githubStarData } from "@/utils/stores";
      import { onAuthStateChanged } from "firebase/auth";
      import { Unsubscribe, doc, onSnapshot } from "firebase/firestore";
      import { Octokit, App } from "octokit";
      import { Convert, TypesGithubStarAPIResponse } from "@/utils/types.github.starApiResponse";
      console.log("hello from the head!");

      onAuthStateChanged(auth, (user) => {
        if (user) {
          console.log("User is authenticated");

          // set the user
          $userFromFirebase.set(user);

          // redirect to / if user is on /login
          if (location.pathname === "/login") {
            location.replace("/");
          }
        } else {
          console.log("User is not authenticated");

          // clear the user
          $userFromFirebase.set(null);

          // redirect to /login if user is not authenticated
          if (location.pathname !== "/login") {
            location.replace("/login");
          }
        }

        $authLoaded.set(true);
      });

      // TODO: cleanup the authSubscriber ??? Do I need to do this?

      // this is only called on next store change
      // see: https://github.com/nanostores/nanostores?tab=readme-ov-file#vanilla-js
      $authLoaded.listen(async (loaded) => {
        /**
         * show the app when auth is loaded
         *
         * TODO: can we do better...?
         * TODO: NOTE: if we put this at the end of this fn, it will run after we get all the data from Firestore and GitHub
         */
        const appElement = document.getElementById("app");
        let tm: NodeJS.Timeout;
        if (appElement) {
          tm = setTimeout(() => {
            appElement.style.display = loaded ? "block" : "none";
          }, 100);
        }

        const userUid = $userFromFirebase.get()?.uid;
        // attach listener to user data in Firestore
        let unsub: Unsubscribe;
        if (loaded && userUid) {
          /**
           * Firestore
           */
          const docRef = doc(db, "users", userUid);
          unsub = onSnapshot(docRef, (doc) => {
            const source = doc.metadata.hasPendingWrites ? "Local" : "Server";
            console.log("Data at ", docRef.path, " from ", source, ": ", doc.data());

            $userData.set((doc.data() as User) || null);
          });

          /**
           * GitHub
           */
          // const octokit = new Octokit({ auth: import.meta.env.PUBLIC_GITHUB_PAT });

          // const data = await octokit.paginate<TypesGithubStarAPIResponse>({
          //   method: "GET",
          //   url: "/user/starred",
          //   headers: {
          //     "X-GitHub-Api-Version": "2022-11-28",
          //   },
          //   per_page: 100, // gets 100 repos per page
          // });

          // $githubStarData.set(data);

          // console.log("GitHub starred repos: ", $githubStarData.get());
        }

        return () => {
          unsub();
          clearTimeout(tm);
        };
      });
    </script>
  </head>
  <body>
    <div id="app" style="display: none;">
      <slot />
    </div>
  </body>
</html>
